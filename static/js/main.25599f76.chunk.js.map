{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","Fragment","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25599f76.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Form({ setInputText, todos, setTodos, inputText, setStatus }) {\r\n  // Here I can write javascript code and function\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 }\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const selectHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <form>\r\n        <input\r\n          value={inputText}\r\n          onChange={inputTextHandler}\r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n        />\r\n        <button\r\n          onClick={submitTodoHandler}\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={selectHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  // events\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n          {text}\r\n        </li>\r\n        <button onClick={completeHandler} className=\"complete-btn\">\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button onClick={deleteHandler} className=\"trash-btn\">\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  // Use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  // Save to Local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>React Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}